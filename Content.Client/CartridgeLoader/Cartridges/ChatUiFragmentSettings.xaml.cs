using Content.Shared.PDA.Messaging;
using Content.Shared.PDA.Messaging.Recipients;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using System.Linq;

namespace Content.Client.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class ChatUiFragmentSettings : BoxContainer, IChatUiFragmentMode
{
    public event Action<BasePdaChatMessageable>? OnBackButtonPressed;
    public event Action? OnHomeButtonPressed;

    public event Action<ProtoId<PdaChatProfilePicturePrototype>>? OnProfilePicturePicked;

    public event Action<NetEntity?>? OnServerChangePicked;

    public event Action<BaseChatUiFragmentPopup>? OnPopupAdd;

    private BasePdaChatMessageable? _recipient;

    private NetEntity?[] _serverIds = [];

    public ChatUiFragmentSettings()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        HomeButton.OnPressed += _ => OnHomeButtonPressed?.Invoke();
        BackButton.OnPressed += _ => OnBackButtonPressed?.Invoke(_recipient!);

        ProfileIconSelector.OnNewPopup += popup => OnPopupAdd?.Invoke(popup);
        ProfileIconSelector.OnProfilePicturePicked += picture => OnProfilePicturePicked?.Invoke(picture);
        ServerSelection.OnItemSelected += selected => OnServerChangePicked?.Invoke(_serverIds[selected.Id]);
    }

    public void UpdateState(PdaChatRecipientProfile profile, BasePdaChatMessageable? recipient, Dictionary<NetEntity, string> servers, NetEntity? currentServer)
    {
        _recipient = recipient;
        BackButton.Visible = recipient != null;

        ProfileIconSelector.CurrentPicture = profile.Picture;
        ProfileName.Text = Loc.GetString(profile.GetUiName());

        ServerSelection.Clear();
        var anyServers = servers.Any();
        ServerSelection.Visible = anyServers;
        ServerSelectionNone.Visible = !anyServers;
        if (anyServers)
        {
            _serverIds = new NetEntity?[servers.Count + 1];

            var i = 0;

            AddServerSelection(null, Loc.GetString("pda-messaging-settings-current-server-none"), i++, currentServer);

            foreach (var (server, serverId) in servers)
                AddServerSelection(server, serverId, i++, currentServer);
        }
    }

    private void AddServerSelection(NetEntity? server, string name, int id, NetEntity? currentServer)
    {
        ServerSelection.AddItem(name, id);

        if (server == currentServer)
            ServerSelection.SelectId(id);

        _serverIds[id++] = server;
    }
}
