using Content.Client.PDA.Messaging;
using Content.Shared.PDA.Messaging;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class ChatUiFragmentProfilePictureSelector : ContainerButton
{
    [Dependency] private readonly IEntityManager _entity = default!;
    [Dependency] private readonly IPrototypeManager _prototype = default!;
    private readonly PdaMessagingSystem _pdaMessaging;
    private readonly SpriteSystem _sprite;

    public Action<ProtoId<PdaChatProfilePicturePrototype>>? OnPicturePicked;
    public Action<BaseChatUiFragmentPopup>? OnNewPopup;

    public ProtoId<PdaChatProfilePicturePrototype> CurrentPicture
    {
        get => _currentPicture;
        set
        {
            _currentPicture = value;
            CurrentIcon.Texture = _sprite.Frame0(_prototype.Index(value).Sprite);
        }
    }

    private ProtoId<PdaChatProfilePicturePrototype> _currentPicture;

    public ChatUiFragmentProfilePictureSelector()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _pdaMessaging = _entity.System<PdaMessagingSystem>();
        _sprite = _entity.System<SpriteSystem>();

        OnPressed += _ => ShowAvailablePictures();
    }

    private void ShowAvailablePictures()
    {
        var selectable = _pdaMessaging.GetSelectableProfilePictures();
        var popup = new ChatUiFragmentProfilePictureSelectorPopup(selectable, _sprite);
        OnNewPopup?.Invoke(popup);
    }
}
