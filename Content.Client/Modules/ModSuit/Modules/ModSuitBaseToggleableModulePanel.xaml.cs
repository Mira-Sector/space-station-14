using Content.Shared.Item;
using Content.Shared.Modules.ModSuit.UI.Modules;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Modules.ModSuit.Modules;

[GenerateTypedNameReferences, Virtual]
public partial class ModSuitBaseToggleableModulePanel : PanelContainer
{
    [Dependency] private readonly IEntityManager _entity = default!;

    public ModSuitBaseToggleableModulePanel(NetEntity netModule, ModSuitBaseToggleableModuleBuiEntry buiEntry)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        var module = _entity.GetEntity(netModule);
        ModuleIcon.SetEntity(module);
        ModuleName.Text = _entity.GetComponent<MetaDataComponent>(module).EntityName;
        ToggleButton.Pressed = buiEntry.Toggled;

        if (buiEntry.Complexity == null)
        {
            Complexity.Visible = false;
        }
        else
        {
            Complexity.Visible = true;
            Complexity.Text = buiEntry.Complexity.Value.ToString();
        }

        EjectButton.Visible = _entity.HasComponent<ItemComponent>(module);
    }
}
