- type: entity
  id: Incorporeal
  save: false
  abstract: true
  description: Mobs without physical bodies
  components:
  - type: Sprite
    noRot: true
    overrideContainerOcclusion: true # Always show up regardless of where they're contained.
    drawdepth: Ghosts
  - type: FTLSmashImmune
  - type: CargoSellBlacklist
  - type: MovementSpeedModifier
    baseSprintSpeed: 12
    baseWalkSpeed: 8
  - type: MovementIgnoreGravity
  - type: Physics
    bodyType: KinematicController
    bodyStatus: InAir
  - type: CanMoveInAir
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 15
        layer:
        - GhostImpassable

# shared parent between aghosts, replay spectators and normal observers
- type: entity
  parent:
  - Incorporeal
  - BaseMob
  id: MobObserverBase
  abstract: true
  name: observer
  description: Boo!
  categories: [ HideSpawnMenu ]
  components:
  - type: Sprite
    sprite: Mobs/Ghosts/ghost_human.rsi
    layers:
    - map: [ "enum.GhostVisuals.Layer" ]
      state: animated
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
  - type: ContentEye
    maxZoom: 1.44,1.44
  - type: Eye
    drawFov: false
  - type: Input
    context: "ghost"
  - type: Examiner
    skipChecks: true
  - type: Ghost
  - type: GhostHearing
  - type: ShowElectrocutionHUD
  - type: ShowHackingHUD
  - type: IntrinsicRadioReceiver
  - type: ActiveRadio
    receiveAllChannels: true
    globalReceive: true
  - type: Tag
    tags:
    - BypassInteractionRangeChecks

- type: entity
  id: MobObserverVisuals
  abstract: true
  components:
  - type: GhostVisuals
    markingsAlpha: 0.9
    markingsToTransfer:
    - Hair
    - FacialHair
    - Snout
    - Head
    - HeadSide
    - HeadTop
    - Arms
    layerDisplacements:
      enum.HumanoidVisualLayers.Hair:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.FacialHair:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.Snout:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.Head:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.HeadTop:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.HeadSide:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.Eyes:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.LArm:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.RArm:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.LHand:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
      enum.HumanoidVisualLayers.RHand:
        sizeMaps:
          32:
            sprite: Mobs/Ghosts/displacement.rsi
            state: hair
  - type: GenericVisualizer
    visuals:
      enum.GhostVisuals.Species:
        enum.GhostVisuals.Layer:
          Arachnid: { state: arachnid }
          Diona: { state: diona }
          Moth: { state: moth }
          Reptilian: { state: reptilian }
          Vox: { state: vox }
          Human: { state: human }
          Dwarf: { state: human }
          Slime: { state: slime }

# proto for player ghosts specifically
- type: entity
  parent: [ MobObserverBase, MobObserverVisuals ]
  id: MobObserver
  components:
  - type: Spectral

- type: entity
  id: ActionGhostBoo
  name: Boo!
  description: Scare your crew members because of boredom!
  components:
  - type: InstantAction
    icon: Interface/Actions/scream.png
    checkCanInteract: false
    event: !type:BooActionEvent
    startDelay: true
    useDelay: 120

- type: entity
  id: ActionToggleLighting
  name: Toggle All Lighting
  description: Toggle all light rendering to better observe dark areas.
  components:
  - type: InstantAction
    icon: Interface/VerbIcons/light.svg.192dpi.png
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleLightingActionEvent

- type: entity
  id: ActionToggleFov
  name: Toggle FoV
  description: Toggles field-of-view in order to see what players see.
  components:
  - type: InstantAction
    icon: Interface/VerbIcons/vv.svg.192dpi.png
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleFoVActionEvent

- type: entity
  id: ActionToggleGhosts
  name: Toggle Ghosts
  description: Toggle the visibility of other ghosts.
  components:
  - type: InstantAction
    icon: { sprite: Mobs/Ghosts/ghost_human.rsi, state: icon }
    clientExclusive: true
    checkCanInteract: false
    event: !type:ToggleGhostsActionEvent

- type: entity
  id: ActionToggleGhostHearing
  name: Toggle Ghost Hearing
  description: Toggle between hearing all messages and hearing only radio & nearby messages.
  components:
  - type: InstantAction
    checkCanInteract: false
    icon:
      sprite: Clothing/Ears/Headsets/base.rsi
      state: icon
    iconOn: Interface/Actions/ghostHearingToggled.png
    event: !type:ToggleGhostHearingActionEvent
