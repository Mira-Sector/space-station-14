- type: entity
  save: false
  parent:
  - BaseMob
  - MobDamageableBody
  - MobPolymorphable
  - MobCombat
  - StripableInventoryBase
  id: BaseMobSpecies
  abstract: true
  components:
  - type: Sprite
    layers:
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentBottom" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentTop" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "back" ]
    - map: [ "neck" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "clownedon" ] # Dynamically generated
      sprite: "Effects/creampie.rsi"
      state: "creampie_human"
      visible: false
  - type: DamageVisuals
    thresholds: [ 10, 20, 30, 50, 70, 100 ]
    targetLayers:
    - bodyPart:
        type: Head
        side: None
      layers: Head
    - bodyPart:
        type: Torso
        side: None
      layers: Chest
    - bodyPart:
        type: Arm
        side: Left
      layers: LArm
    - bodyPart:
        type: Arm
        side: Right
      layers: RArm
    - bodyPart:
        type: Leg
        side: Left
      layers: LLeg
    - bodyPart:
        type: Leg
        side: Right
      layers: RLeg
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#FF0000"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
  - type: GenericVisualizer
    visuals:
      enum.CreamPiedVisuals.Creamed:
        clownedon: # Not 'creampied' bc I can already see Skyrat complaining about conflicts.
          True: {visible: true}
          False: {visible: false}
  - type: StatusIcon
    bounds: -0.5,-0.5,0.5,0.5
  - type: RotationVisuals
    defaultRotation: 90
    horizontalRotation: 90
  - type: HumanoidAppearance
    species: Human
  - type: SlowOnDamage
    speedModifierThresholds:
      60: 0.7
      80: 0.5
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 185
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: FloorOcclusion
  - type: RangedDamageSound
    soundGroups:
      Brute:
        collection:
          MeatBulletImpact
    soundTypes:
      Heat:
        collection:
          MeatLaserImpact
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
    - Stutter
    - SeeingRainbows
    - Electrocution
    - Drunk
    - SlurredSpeech
    - RatvarianLanguage
    - PressureImmunity
    - Muted
    - ForcedSleep
    - TemporaryBlindness
    - Pacified
    - StaminaModifier
    - Flashed
    - RadiationProtection
    - Drowsiness
    - Adrenaline
  - type: SlipGrace
    delay: 2.5
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: Identity
  - type: IdExaminable
  - type: Hands
  - type: ComplexInteraction
  - type: Internals
  - type: FloatingVisuals
  - type: Climbing
  - type: Cuffable
  - type: Ensnareable
    sprite: Objects/Misc/ensnare.rsi
    state: icon
  - type: AnimationPlayer
  - type: CriminalRecord
  - type: Buckle
  - type: CombatMode
    canDisarm: true
  - type: MeleeWeapon
    soundHit:
      collection: Punch
    angle: 30
    animation: WeaponArcFist
    attackRate: 1
    damage:
      types:
        Blunt: 5
  - type: DamagePartAccuracy
  - type: SleepEmitSound
  - type: SSDIndicator
  - type: StandingState
  - type: Dna
  - type: MindContainer
    showExamineInfo: true
  - type: CanEnterCryostorage
  - type: InteractionPopup
    successChance: 1
    interactSuccessString: hugging-success-generic
    interactSuccessSound: /Audio/Effects/thudswoosh.ogg
    messagePerceivedByOthers: hugging-success-generic-others
    messagePerceivedByTarget: hugging-success-generic-target
  - type: AlternativeInteractionPopup
    verbTitle: poking-verb
    successChance: 1
    interactSuccessSound:
      collection: WeakHit
    soundPerceivedByOthers: false
    interactSuccessString: poking-success-generic
    messagePerceivedByTarget: poking-success-target
  - type: CanHostGuardian
  - type: NpcFactionMember
    factions:
    - NanoTrasen
  - type: CreamPied
  - type: Stripping
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key:
        type: HumanoidMarkingModifierBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.DamageSelectorUiKey.Key:
        type: DamageSelectorBoundUserInterface
  - type: Puller
  - type: Speech
    speechSounds: Alto
  - type: DamageForceSay
  - type: Emoting
  - type: BodyEmotes
    soundsId: GeneralBodyEmotes
  - type: Grammar
    attributes:
      proper: true
  - type: MobPrice
    price: 1500 # Kidnapping a living person and selling them for cred is a good move.
    deathPenalty: 0.01 # However they really ought to be living and intact, otherwise they're worth 100x less.
  - type: MobThresholds
    thresholds:
      0: Alive
      100: SoftCritical
      130: HardCritical
      200: Dead
  - type: MobState
    allowedStates:
      - Alive
      - SoftCritical
      - HardCritical
      - Dead
  - type: MobStateActions
    actions:
      SoftCritical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
      HardCritical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: DamageOnInteract
    damageUser: false
    damage:
      types:
        Asphyxiation: -0.8 # not enough where you can counter it
    ignoreResistances: true
    popupText: cpr-start
    ignoreDamage: true
    interactSound:
      path: /Audio/Effects/heartbeat.ogg
    requiredStates:
    - SoftCritical
    - HardCritical
    time: 2.5
    doAfterRepeatable: true
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
    - AnomalyHost
  - type: Crawler
  - type: CanRemoveCrawling

- type: entity
  save: false
  parent:
  - MobBloodstream
  - MobRespirator
  - MobAtmosStandard
  - MobFlammable
  - BaseMobSpecies
  id: BaseMobSpeciesOrganic
  abstract: true
  components:
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.50 #per second, scales with pressure and other constants.
        Heat: 0.1
  - type: PassiveDamage # Slight passive regen. Assuming one damage type, comes out to about 4 damage a minute.
    allowedStates:
    - Alive
    damageCap: 20
    damage:
      types:
        Heat: -0.07
      groups:
        Brute: -0.07
  - type: Fingerprint
  - type: Blindable
  # Other
  - type: Temperature
    heatDamageThreshold: 325
    coldDamageThreshold: 260
    currentTemperature: 310.15
    specificHeat: 42
    coldDamage:
      types:
        Cold: 0.1 #per second, scales with temperature & other constants
    heatDamage:
      types:
        Heat: 1.5 #per second, scales with temperature & other constants
  - type: TemperatureSpeed
    thresholds:
      293: 0.8
      280: 0.6
      260: 0.4
  - type: ThermalRegulator
    metabolismHeat: 800
    radiatedHeat: 100
    implicitHeatRegulation: 500
    sweatHeatRegulation: 2000
    shiveringHeatRegulation: 2000
    normalBodyTemperature: 310.15
    thermalRegulationTemperatureThreshold: 2
  - type: Perishable
  - type: Butcherable
    butcheringType: Spike # TODO human.
    spawned:
      - id: FoodMeat
        amount: 5
  - type: Respirator
    damage:
      types:
        Asphyxiation: 1.0
    damageRecovery:
      types:
        Asphyxiation: -1.0
  - type: FireVisuals
    alternateState: Standing
  - type: HealthAnalyzerBody
    limbs:
      - bodyPart:
          type: Head
          side: None
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: head-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: head
      - bodyPart:
          type: Torso
          side: None
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: torso-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: torso
      - bodyPart:
          type: Arm
          side: Left
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: l_arm-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: l_arm
      - bodyPart:
          type: Arm
          side: Right
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: r_arm-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: r_arm
      - bodyPart:
          type: Leg
          side: Left
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: l_leg-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: l_leg
      - bodyPart:
          type: Leg
          side: Right
        hoverSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: r_leg-hover
        selectedSprite:
          sprite: /Textures/Interface/health_analyzer_body.rsi
          state: r_leg
  - type: SurgeryReceiverBody
    surgeries:
      - bodyPart: !type:BodyPart { type: Head, side: None }
        surgeries:
          availableSurgeries:
          - LimbReplacement
      - bodyPart: !type:BodyPart { type: Arm, side: Left }
        surgeries:
          availableSurgeries:
          - LimbReplacement
      - bodyPart: !type:BodyPart { type: Arm, side: Right }
        surgeries:
          availableSurgeries:
          - LimbReplacement
      - bodyPart: !type:BodyPart { type: Leg, side: Left }
        surgeries:
          availableSurgeries:
          - LimbReplacement
      - bodyPart: !type:BodyPart { type: Leg, side: Right }
        surgeries:
          availableSurgeries:
          - LimbReplacement

- type: entity
  save: false
  id: BaseSpeciesDummy
  parent: InventoryBase
  abstract: true
  components:
  - type: Hands
  - type: ComplexInteraction
  - type: ContainerContainer
  - type: Icon
    sprite: Mobs/Species/Human/parts.rsi
    state: full
  - type: Sprite
    drawdepth: Mobs
    noRot: true
    # TODO BODY Turn these into individual body parts?
    layers:
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentBottom" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentTop" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "back" ]
    - map: [ "neck" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
  - type: Appearance
  - type: HumanoidAppearance
    species: Human
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key: # sure, this can go here too
        type: HumanoidMarkingModifierBoundUserInterface
